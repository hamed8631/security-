Iptables
#yum install iptables
3 tables in iptables
INPUT : زمانی استفاده میشود که مقصد پکت خود سرور ما باشد
OUTPUT : زمانی استفاده میشود که فرستنده پکت سرور ما باشد
FORWARD : زمانی استفاده میشود که نه مبدا و نه مقصد پکت سرور ما نباشد و سرور در حالت Router باشد
Enable ip forwarding in linux:
1-	sysctl -w net.ipv4.ip_forward=1
2-	vi /etc/sysctl.conf
	net.ipv4.ip_forward = 1
سوئیچ ها و دستورات iptable
•	A- برای افزودن دستور به انتهای یک زنجیره از جدول قوانین استفاده می شود.
•	I- برای افزودن به مکان خاصی از زنجیره جدول قوانین استفاده می شود.
•	D- برای حذف دستور از مکان خاصی از زنجیره جدول قوانین استفاده می شود.
•	R- برای جایگزین کردن دستور جاری یا یک دستور در مکان خاصی از زنجیره جدول قوانین استفاده می شود.
•	p- برای مشخص کردن نوع پروتکل مورد استفاده قرار می¬گیرد.
•	t- برای مشخص کردن جدول مورد استفاده قرار می¬گیرد.
•	s- یا source– برای مشخص کردن شماره ip  مبدا مورد استفاده قرار می¬گیرد.
•	d- یا destination– برای مشخص کردن شماره ip  مقصد مورد استفاده قرار می¬گیرد.
•	i- یا in-interface– برای مشخص کردن کارت شبکه ورودی مورد استفاده قرار می¬گیرد.
•	o- یا out-interface– برای مشخص کردن کارت شبکه خروجی مورد استفاده قرار می¬گیرد.
•	sport– برای مشخص کردن شماره پورت مبدا مورد استفاده قرار می¬گیرد.
•	dport– برای مشحص کردن شماره پورت مقصد مورد استفاده قرار می¬گیرد.
•	L- برای لیست کردن قوانین موجود در یک زنجیر مورد استفاده قرار می¬گیرد.
•	N- برای ایجاد زنجیر جدید مورد استفاده قرار می¬گیرد.
•	X- برای حذف یک زنجیر مورد استفاده قرار می¬گیرد.
•	F- برای پاک کردن قوانین مورد استفاده قرار می¬گیرد.
•	j- مشخص کردن نحوه برخورد با بسته مورد استفاده قرار می¬گیرد. این سویچ به معنی jump  بوده و به موارد DROP ، LOG ، ACCEPT  و REJECT اشاره می کند. در اینجا تفاوتی که بین DROP و REJECT وجود دارد و آ ن این است که در DROP برای فرستنده پیامی مبنی بر حذف بسته  ارسال نمی¬کند ولی در REJECT به فرستنده یک بسته عدم پذیرش ترافیک ارسال خواهد شد.
•	iptables-save > /etc/iptables.rules برای پشتیبان گیری تنظیمات مورد استفاده قرار می¬گیرد.
•	post-down iptables-save > /etc/iptables.rules برای پشتیبان گیری تنظیمات قبل از هر خاموش شدن سیستم مورد استفاده قرار می¬گیرد.
•	iptables-restore < /etc/iptables.rules برای بازیابی تنظیمات مورد استفاده قرار می¬گیرد.
•	m- برای مشخص کردن ماژول مورد استفاده قرار می گیرد.
•	m mac –mac-source- برای مشخص کردن مک آدرس مبدا مورد استفاده قرار می گیرد.




Example
سه دستور زیر را میزنم که هر پکتی اگر با رول های ما مچ نشد ان پکت دراپ شود
iptables -P INPUT DROP
 
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

#iptables -A INPUT –j DROP                        \\drop all packet input
#iptables -D INPUT –j DROP                        \\delete rule
#iptables –F INPUT                                        \\delete all rule input
#iptables –A INPUT –s 192.168.1.50 –j DROP	\\delete all packet from source 192.168.1.50
-s == source ip
#iptables –nL				\\ view all rule & n=numerical & L=list
#iptables -A INPUT -s 192.168.1.50  -p icmp --icmp-type echo-request –j DROP		\\drop ping from 1.50
#iptables –A INPUT –s 192.168.1.50 –p tcp --dport 80 –j DROP		\\drop packet from 1.50 to my web server in port 80
--dport == destination port
#iptables –A INPUT –m mac --mac-source 00:52:76:D0:00:01 –p tcp --dport 23 –j DROP		//block mack address & block telnet
-m  == match  // zamani kea z option haye iptables estefade mikonim az –m estefade mishavad
#iptables –A INPUT –p udp –dport 53 –i eth1 –j DROP        //drop dns packet from eth1
-i == interface
#iptables –A INPUT –p tcp --dport 80 –j LOG  --log-prefix “WebRequest”		// log from all request for web server
Save in == /var/log/messages
#iptables –A INPUT –p tcp –m multiport --dports 80,23 –s 192.168.1.50 –j DROP		//drop two port
#iptables -A INPUT -p tcp --syn --dport 23 -j DROP    // drop syn packet in tree way hand shake
#iptables –A INPUT –s 10.10.10.2 –p tcp --dport 22 –j REJECT --reject-with  icmp-port-unreachable		//reject port 22 for source ip 10.10.10.2 & send message “icmp-port-unreachable”
--reject-with = 1- icmp-port-unreachable  2- icmp-net-unreachable  3- icmp-host-unreachable  4- icmp-proto-unreachable 5- icmp-net-prohibited  6- icmp-host-prohibited  7- tcp-reset  
For test used cmd hping
# iptables –A INPUT –p tcp --dport 22 –s 10.10.10.2 –j DROP		//port 22 baraye ip 10.2 baste ast vali ba abzarhayi mesl nmap mitavan motavajeh shod ke baz ast
# iptables –A INPUT –p tcp --dport 22 –s 10.10.10.2 –j REJECT --reject-with tcp-reset  // agar dastur bala bedin surat neveshte shaved digar nmap ham nemitavanad motevajeh shaved ke baz ast
# iptables -A INPUT -p tcp  --dport 22 -m time  --timestart 09:00  --timestop 18:00 –j REJECT   --
reject-with tcp-reset		// drop all packet for ssh in selected time
# iptables –A INPUT –p tcp  --dport 22 –m time  --weekdays Sa,Su –j REJECT  --reject-with tcp-
Reset		//drop ssh packet in Sunday and Saturday	
# iptables –A INPUT –p tcp –dport 22 –m time  --datestart 2016-11-25  --datestop 2016-12-25   -j 
REJECT –reject-with tcp-reset		//drop ssh in 2 days
# iptables –A INPUT –p tcp  --dport 80 –m time  --monthdays 5,9,13,17 –j REJECT  --reject-with 
tcp-reset		//drop web packet in 5,9,13,17 all months
# iptables –A INPUT –p tcp --dport 80 –m time ! --monthdays 5,9,13,17 –j REJECT --reject-
with tcp-reset		//only used in 5,9,13,17 all months  **    !   meaning not
# iptables –A INPUT –p tcp --dport 22 –m connlimit --connlimit-above 2 –j REJECT --reject-with 
tcp-reset		//only two coonection from one ip
# iptables  –A INPUT  –p icmp  –m length !  --length 0:1500  –j REJECT  --reject-with icmp-host-
Unreachable		//drop icmp packet more than 1500 byte
# iptables –A INPUT –p icmp –m iprange --src-iprange 10.10.10.12-10.10.10.17 –j REJECT		//select ip range
#iptables –A INPUT –p tcp --dport 22 –m comment --comment “Blocking SSH” –j DROP		//comment for rule

#iptables –A FORWARD –s 10.10.10.128/25 –j DROP		//drop forward packet from source 10.128/25
#iptables –A FORWARD –s 10.10.9.0/24 –d 10.10.8.0/24 –j DROP	//drop packet from source 9.0/24 to destination 8.0/24
# iptables –A FORWARD –p tcp --dport 1723 –j DROP		//drop forward packet pptp
# iptables –A FORWARD –s 10.10.9.0/24 –p tcp --dport 80 –m connlimit --connlimit-above 600 –
j REJECT --reject-with tcp-reset		//limit packet send to web server  x < = 600
#iptables –A FORWARD –m length ! --length 0:1500 –j REJECT --reject-with tcp-reset	//drop packet more than 1500 bytes
# iptables –A FORWARD –m time  --timestart 16:01 --timestop 7:29 –j REJECT		//limit time for all traffic
# iptables –A FORWARD –d 10.10.8.0/24 –i eth 1 –s 10.10.9.0/24 –j DROP
# iptables –A FORWARD –m state --state NEW –i eth1 –j DROP		//drop all connection from internet to internal
# iptables -A FORWARD -m ttl ! --ttl-eq 128 -j DROP  		//only accept packet windows
# iptables –t nat –A POSTROUTING –o eth1 –j SNAT --to 172.16.1.1		//source nat to 172.16.1.1
# iptables –A POSTROUTING –s 10.10.9.0/25 –o eth1 –j SNAT --to 172.16.1.2	//source nat to 172.16.1.2
# iptables -t nat -A POSTROUTING -o eth1 -j SNAT --to 2.2.2.3-2.2.2.5	//source nat to ip range
# iptables –A POSTROUTING –o eth1 –t nat –j MASQUERADE	// for internet sharing and all packet nat
# iptables –t nat –A POSTROUTING –p tcp --dport 80 –d 216.239.32.20 –j SNAT --to 2.2.2.5 	//port=80 & destination=216.239.32.20    snat to 2.2.2.5
# iptables –t nat –A POSTROUTING –p tcp --sport 80 –o eth1 –j SNAT --to  2.2.2.6 	//snat dport 80 to 2.2.2.6
#iptables –t nat –A POSTROUTING –p tcp --sport 25 -o eth1  –j SNAT  --to 2.2.2.7	//snat dport 25 to 2.2.2.7
# iptables –t nat –A PREROUTING --d 2.2.2.2 –j DNAT --to 172.16.1.2		// destination nat , all packet recived from 2.2.2.2 send to 172.16.1.2
# iptables –t nat –A PREROUTING –p tcp --dport 80 –d 10.10.2.85 –j DNAT --to 172.16.1.3 	//destination nat all packet from port 80 from ip 10.10.2.85 dnat to 172.16.1.3
# iptables –t nat –A PREROUTING –p tcp --dport 8080 –d 10.10.2.85 –j DNAT --to 172.16.1.3 :80	//destination nat all packet from port 8080 from ip 10.10.2.85 dnat to 172.16.1.3 port 80
#iptables –t nat –A PREROUTING –s 10.10.9.0/24 –p tcp --dport 80 –j DNAT --to 172.16.1.100:80	//dnat range ip
#iptables –t nat –A PREROUTING -p tcp --dport 80 –j REDIRECT --to-port 80	//packet send to my linux
Open ssh  inout
#iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
#iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT

Open ssh for ip range
#iptables -A INPUT -i eth0 -p tcp -s xxx.xxx.xxx.xxx/24 --dport 22 -m state –state NEW,ESTABLISHED -j ACCEPT
#iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT

Open http and https port input
#iptables -A INPUT -i eth0 -p tcp --dport 80,443 -m state --state NEW,ESTABLISHED -j ACCEPT
#iptables -A OUTPUT -o eth0 -p tcp --sport 80,443 -m state --state ESTABLISHED -j ACCEPT

open ssh output
# iptables -A OUTPUT -o eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
#iptables -A INPUT -i eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT

Open hhtps output
# iptables -A OUTPUT -o eth0 -p tcp --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT
#iptables -A INPUT -i eth0 -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT

Open ping output
#iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
#iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT

Open ping input
#iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
#iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT

Accept all packet forwarding from eth0 to eth1
#iptables -A FORWARD -i eth0 -o eth1 -j ACCEPT



Drop packet to destination ( output rule )
iptables -A OUTPUT -d 1.2.3.4 -j DROP
iptables -A OUTPUT -d 192.168.1.0/24 -j DROP
iptables -A OUTPUT -o eth1 -d 192.168.1.0/24 -j DROP






#iptables –L			//show all rule
#service iptables status		//show status iptables
#service iptables save		//save iptables


